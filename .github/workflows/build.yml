# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  packages: write

env:
  IMAGE_TAG: ${{ github.sha }}

jobs:
#  build-push-update-gitops:
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@master
#
#      - name: Set up JDK 11
#        uses: actions/setup-java@v2
#        with:
#          java-version: "11"
#          distribution: "adopt"
#
#      - name: Cache Maven packages
#        uses: actions/cache@v2
#        with:
#          path: ~/.m2
#          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
#          restore-keys: ${{ runner.os }}-m2
#
#      - name: Build Image
#        run: mvn -B spring-boot:build-image -Dspring-boot.build-image.imageName=ghcr.io/marknazareno/spring-boot-demo:${{ env.IMAGE_TAG }}
#
#      - name: Login to Registry
#        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
#
#      - name: Push Image
#        run: docker push ghcr.io/marknazareno/spring-boot-demo:${{ env.IMAGE_TAG }}
#
#      - name: Checkout GitOps File
#        uses: actions/checkout@v2
#        with:
#          repository: marknazareno/gitops-apps-prod
#          path: gitops-apps-prod
#          token: ${{ secrets.GITOPS_TOKEN }}
#
#      - name: Set up yq
#        uses: mikefarah/yq@v4.9.3
#        with:
#          cmd: yq eval '.images[0].newTag="${{ env.IMAGE_TAG }}"' -i gitops-apps-prod/spring-boot-demo/kustomization.yaml
#
#      - name: commit updated yaml
#        working-directory: ./gitops-apps-prod
#        run: |
#          git config user.name github-actions
#          git config user.email github-actions@github.com
#          git add .
#          git commit -m "update spring-boot-demo to ${{ env.IMAGE_TAG }}"
#          git push
#
#      - name: Move cache
#        run: |
#          rm -rf /tmp/.buildx-cache
#          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  build-with-paketo-push-2-ghcr:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: "11"
          distribution: "adopt"

      - name: Login to Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Install pack CLI via the official buildpack Action https://github.com/buildpacks/github-actions#setup-pack-cli-action
        uses: buildpacks/github-actions/setup-pack@v4.1.1

      - name: Build app with pack CLI using Buildpack Cache image (see https://buildpacks.io/docs/app-developer-guide/using-cache-image/) & publish to Docker Hub
        run: |
          pack build ghcr.io/marknazareno/spring-boot-demo:${{ env.IMAGE_TAG }} \
              --builder paketobuildpacks/builder:0.1.113-base \
              --path . \
              --cache-image ghcr.io/marknazareno/spring-boot-demo-cache:latest \
              --publish
